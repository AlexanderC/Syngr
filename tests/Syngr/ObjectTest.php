<?php
namespace Syngr;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-22 at 08:42:26.
 */
class ObjectTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Object
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Object();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Syngr\Object::getOption
     */
    public function testGetOption()
    {
        $object = new Object(
            array(),
            array('foo' => array('bar' => 'baz'))
        );

        $this->assertEquals('baz', $object->getOption('foo.bar'));
    }

    /**
     * @covers Syngr\Object::getOption
     * @expectedException        Exception
     * @expectedExceptionMessage Options are not in an array
     */
    public function testGetOptionNotArray()
    {
        $this->object->getOption('foo.bar', 'not_array');
    }

    /**
     * @covers Syngr\Object::getOption
     * @expectedException        Exception
     * @expectedExceptionMessage Option "foo" has not been set
     */
    public function testGetOptionNotSet()
    {
        $this->object->getOption('foo.bar');
    }

    /**
     * @covers Syngr\Object::setOption
     */
    public function testSetOption()
    {
        $this->object->setOption('foo.bar', 'baz');
        $this->assertEquals('baz', $this->object->getOption('foo.bar'));
    }

    /**
     * @covers Syngr\Object::setOption
     * @expectedException        Exception
     * @expectedExceptionMessage Options are not in an array
     */
    public function testSetOptionNotArray()
    {
        $this->object->setOption('foo.bar', 'baz', 'not_array');
    }

    /**
     * @covers Syngr\Object::getFields
     */
    public function testGetFields()
    {
        $fields = array('foo' => 'bar');
        $this->object->setFields($fields);
        $this->assertEquals($fields, $this->object->getFields());
    }

    /**
     * @covers Syngr\Object::setFields
     */
    public function testSetFields()
    {
        $fields = array('foo' => 'bar');
        $this->object->setFields($fields);
        $this->assertEquals($fields, $this->object->getFields());
    }

    /**
     * @covers                   Syngr\Object::setFields
     * @expectedException        Exception
     * @expectedExceptionMessage Fields are not in an array
     */
    public function testSetFieldsArrayException()
    {
        $this->object->setFields('not_array');
    }

    /**
     * @covers Syngr\Object::__call
     */
    public function testMagicGet()
    {
        $this->object->setFields(array('foo' => 'bar'));
        $this->assertEquals(
            'bar',
            $this->object->getFoo()
        );
    }

    /**
     * @covers                   Syngr\Object::__call
     * @expectedException        Exception
     * @expectedExceptionMessage The requested option: "foo" does not exist
     */
    public function testMagicGetException()
    {
        $this->object->getFoo();
    }

    /**
     * @covers Syngr\Object::__call
     */
    public function testMagicSet()
    {
        $this->object->setFoo('bar');
        $this->assertEquals(
            $fields = array('foo' => 'bar'),
            $this->object->getFields()
        );
    }

    /**
     * @covers                   Syngr\Object::__call
     * @expectedException        Exception
     * @expectedExceptionMessage The requested verb: "foo" is not valid
     */
    public function testMagicUnknownVerbException()
    {
        $this->object->fooBar();
    }

    /**
     * @covers Syngr\Object::fromCamelCase
     */
    public function testCamelCase()
    {
        $object = new Object(
            array(
                'foo_bar' => 'baz'
            )
        );
        $this->assertEquals('baz', $object->getFooBar());
    }
}
